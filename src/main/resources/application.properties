server.port = ${PORT:8080}

# Mail - define host, port, username, password
spring.mail.host= 
spring.mail.username= 
spring.mail.password= 
spring.mail.port=
spring.mail.properties.mail.smtp.starttls.enable = true

# View
spring.view.suffix=.html
spring.view.prefix=resources/templates

# H2
spring.h2.console.enabled=true
spring.h2.console.path=/h2

# Datasource


# Define your database connection(url, username, password and type of ddl) - Need postgreSQL database(certain entities may not work with other databases - require tweaking)
#spring.datasource.url=
#spring.datasource.username=
#spring.datasource.password=
#spring.jpa.hibernate.ddl-auto=

#H2 - embedded in memory database
spring.datasource.url=jdbc:h2:file:~/test
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

spring.main.allow-bean-definition-overriding=true

# Security
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

spring.queries.users-query=select email, password, active from app_user where email=?
spring.queries.roles-query="select u.email, 'USER' from app_user u where u.email=?"

spring.datasource.initialization-mode=always

# Google Drive properties - for archiving images(folder id, application id, path to JSON credentials for service account)
google.folder-id=
google.app-id=
google.service.path=/service_account.json

# Ebay properties (url for Trading API, token for user account- required for usage of Trading API(use your own ebay account token), site - US site for Trading API, finding.id = general API key required for all APIs
ebay.trading.url=https://api.ebay.com/wsapi
ebay.trading.token=
ebay.trading.site=0
ebay.finding.id=

#Twilio properties(account sid, auth token and number) - all is provided upon setting up Twilio account
twilio.account.sid=
twilio.auth.token=
twilio.number=

